/**
 * Generated by orval v6.7.1 🍺
 * Do not edit manually.
 * Medusa Storefront API
 * OpenAPI spec version: 1.0.0
 */
import type {
  PostSwaps200,
  PostSwapsBody,
  GetSwapsSwapCartId200,
} from ".././model"
import { getClient } from "../../../src/custom-instance"

/**
 * Creates a Swap on an Order by providing some items to return along with some items to send back
 * @summary Create a Swap
 */
export const postSwaps = (postSwapsBody: PostSwapsBody) => {
  return getClient<PostSwaps200>({
    url: `/swaps`,
    method: "post",
    headers: { "Content-Type": "application/json" },
    data: postSwapsBody,
  })
}
/**
 * Retrieves a Swap by the id of the Cart used to confirm the Swap.
 * @summary Retrieve Swap by Cart id
 */
export const getSwapsSwapCartId = (cartId: string) => {
  return getClient<GetSwapsSwapCartId200>({
    url: `/swaps/${cartId}`,
    method: "get",
  })
}

// eslint-disable-next-line @typescript-eslint/no-explicit-any
type AsyncReturnType<T extends (...args: any) => Promise<any>> = T extends (
  ...args: any
) => Promise<infer R>
  ? R
  : any

export type PostSwapsResult = NonNullable<AsyncReturnType<typeof postSwaps>>
export type GetSwapsSwapCartIdResult = NonNullable<
  AsyncReturnType<typeof getSwapsSwapCartId>
>

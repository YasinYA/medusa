/**
 * Generated by orval v6.7.1 🍺
 * Do not edit manually.
 * Medusa Storefront API
 * OpenAPI spec version: 1.0.0
 */
import type {
  GetProductsProduct200,
  GetProducts200,
  GetProductsParams,
} from ".././model"
import { getClient } from "../../../src/custom-instance"

/**
 * Retrieves a Product.
 * @summary Retrieves a Product
 */
export const getProductsProduct = (id: string) => {
  return getClient<GetProductsProduct200>({
    url: `/products/${id}`,
    method: "get",
  })
}
/**
 * Retrieves a list of Products.
 * @summary List Products
 */
export const getProducts = (params?: GetProductsParams) => {
  return getClient<GetProducts200>({ url: `/products`, method: "get", params })
}

// eslint-disable-next-line @typescript-eslint/no-explicit-any
type AsyncReturnType<T extends (...args: any) => Promise<any>> = T extends (
  ...args: any
) => Promise<infer R>
  ? R
  : any

export type GetProductsProductResult = NonNullable<
  AsyncReturnType<typeof getProductsProduct>
>
export type GetProductsResult = NonNullable<AsyncReturnType<typeof getProducts>>

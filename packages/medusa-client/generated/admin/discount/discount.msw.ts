/**
 * Generated by orval v6.7.1 🍺
 * Do not edit manually.
 * Medusa Admin API
 * OpenAPI spec version: 1.0.0
 */
import { rest } from "msw"
import { faker } from "@faker-js/faker"

export const getPostDiscountsDiscountRegionsRegionMock = () => ({
  discount: faker.helpers.randomize([{}, undefined]),
})

export const getDeleteDiscountsDiscountRegionsRegionMock = () => ({
  discount: faker.helpers.randomize([{}, undefined]),
})

export const getPostDiscountsMock = () => ({
  discount: faker.helpers.randomize([{}, undefined]),
})

export const getGetDiscountsMock = () => ({
  discount: faker.helpers.randomize([{}, undefined]),
})

export const getPostDiscountsDiscountDynamicCodesMock = () => ({
  discount: faker.helpers.randomize([{}, undefined]),
})

export const getDeleteDiscountsDiscountMock = () => ({
  id: faker.helpers.randomize([faker.random.word(), undefined]),
  object: faker.helpers.randomize([faker.random.word(), undefined]),
  deleted: faker.helpers.randomize([faker.datatype.boolean(), undefined]),
})

export const getGetDiscountsDiscountMock = () => ({
  discount: faker.helpers.randomize([{}, undefined]),
})

export const getPostDiscountsDiscountMock = () => ({
  discount: faker.helpers.randomize([{}, undefined]),
})

export const getDeleteDiscountsDiscountDynamicCodesCodeMock = () => ({
  discount: faker.helpers.randomize([{}, undefined]),
})

export const getGetDiscountsDiscountCodeMock = () => ({
  discount: faker.helpers.randomize([{}, undefined]),
})

export const getDiscountMSW = () => [
  rest.post("*/admin/discounts/:id/regions/:regionid", (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getPostDiscountsDiscountRegionsRegionMock())
    )
  }),
  rest.delete("*/admin/discounts/:id/regions/:regionid", (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getDeleteDiscountsDiscountRegionsRegionMock())
    )
  }),
  rest.post("*/admin/discounts", (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getPostDiscountsMock())
    )
  }),
  rest.get("*/admin/discounts", (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getGetDiscountsMock())
    )
  }),
  rest.post("*/admin/discounts/:id/dynamic-codes", (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getPostDiscountsDiscountDynamicCodesMock())
    )
  }),
  rest.delete("*/admin/discounts/:id", (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getDeleteDiscountsDiscountMock())
    )
  }),
  rest.get("*/admin/discounts/:id", (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getGetDiscountsDiscountMock())
    )
  }),
  rest.post("*/admin/discounts/:id", (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getPostDiscountsDiscountMock())
    )
  }),
  rest.delete("*/admin/discounts/:id/dynamic-codes/:code", (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getDeleteDiscountsDiscountDynamicCodesCodeMock())
    )
  }),
  rest.get("*/admin/discounts/code/:code", (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getGetDiscountsDiscountCodeMock())
    )
  }),
]

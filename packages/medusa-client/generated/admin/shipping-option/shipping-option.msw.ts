/**
 * Generated by orval v6.7.1 🍺
 * Do not edit manually.
 * Medusa Admin API
 * OpenAPI spec version: 1.0.0
 */
import { rest } from "msw"
import { faker } from "@faker-js/faker"

export const getPostShippingOptionsMock = () => ({
  shipping_option: faker.helpers.randomize([{}, undefined]),
})

export const getGetShippingOptionsMock = () => ({
  shipping_options: faker.helpers.randomize([
    [...Array(faker.datatype.number({ min: 1, max: 10 }))].map(() => ({})),
    undefined,
  ]),
})

export const getDeleteShippingOptionsOptionMock = () => ({
  id: faker.helpers.randomize([faker.random.word(), undefined]),
  object: faker.helpers.randomize([faker.random.word(), undefined]),
  deleted: faker.helpers.randomize([faker.datatype.boolean(), undefined]),
})

export const getGetShippingOptionsOptionMock = () => ({
  shipping_option: faker.helpers.randomize([{}, undefined]),
})

export const getPostShippingOptionsOptionMock = () => ({
  shipping_option: faker.helpers.randomize([{}, undefined]),
})

export const getShippingOptionMSW = () => [
  rest.post("*/admin/shipping-options", (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getPostShippingOptionsMock())
    )
  }),
  rest.get("*/admin/shipping-options", (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getGetShippingOptionsMock())
    )
  }),
  rest.delete("*/admin/shipping-options/:id", (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getDeleteShippingOptionsOptionMock())
    )
  }),
  rest.get("*/admin/shipping-options/:id", (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getGetShippingOptionsOptionMock())
    )
  }),
  rest.post("*/admin/shipping-options/:id", (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getPostShippingOptionsOptionMock())
    )
  }),
]

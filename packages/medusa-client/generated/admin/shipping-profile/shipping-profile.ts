/**
 * Generated by orval v6.7.1 🍺
 * Do not edit manually.
 * Medusa Admin API
 * OpenAPI spec version: 1.0.0
 */
import type {
  PostShippingProfiles200,
  PostShippingProfilesBody,
  GetShippingProfiles200,
  DeleteShippingProfilesProfile200,
  GetShippingProfilesProfile200,
  PostShippingProfilesProfile200,
  PostShippingProfilesProfileBody,
} from ".././model"
import { getClient } from "../../../src/custom-instance"

/**
 * Creates a Shipping Profile
 * @summary Create a Shipping Profile
 */
export const postShippingProfiles = (
  postShippingProfilesBody: PostShippingProfilesBody
) => {
  return getClient<PostShippingProfiles200>({
    url: `/admin/shipping-profiles`,
    method: "post",
    headers: { "Content-Type": "application/json" },
    data: postShippingProfilesBody,
  })
}
/**
 * Retrieves a list of Shipping Profile.
 * @summary List Shipping Profiles
 */
export const getShippingProfiles = () => {
  return getClient<GetShippingProfiles200>({
    url: `/admin/shipping-profiles`,
    method: "get",
  })
}
/**
 * Deletes a Shipping Profile.
 * @summary Delete a Shipping Profile
 */
export const deleteShippingProfilesProfile = (id: string) => {
  return getClient<DeleteShippingProfilesProfile200>({
    url: `/admin/shipping-profiles/${id}`,
    method: "delete",
  })
}
/**
 * Retrieves a Shipping Profile.
 * @summary Retrieve a Shipping Profile
 */
export const getShippingProfilesProfile = (id: string) => {
  return getClient<GetShippingProfilesProfile200>({
    url: `/admin/shipping-profiles/${id}`,
    method: "get",
  })
}
/**
 * Updates a Shipping Profile
 * @summary Update a Shipping Profiles
 */
export const postShippingProfilesProfile = (
  id: string,
  postShippingProfilesProfileBody: PostShippingProfilesProfileBody
) => {
  return getClient<PostShippingProfilesProfile200>({
    url: `/admin/shipping-profiles/${id}`,
    method: "post",
    headers: { "Content-Type": "application/json" },
    data: postShippingProfilesProfileBody,
  })
}

// eslint-disable-next-line @typescript-eslint/no-explicit-any
type AsyncReturnType<T extends (...args: any) => Promise<any>> = T extends (
  ...args: any
) => Promise<infer R>
  ? R
  : any

export type PostShippingProfilesResult = NonNullable<
  AsyncReturnType<typeof postShippingProfiles>
>
export type GetShippingProfilesResult = NonNullable<
  AsyncReturnType<typeof getShippingProfiles>
>
export type DeleteShippingProfilesProfileResult = NonNullable<
  AsyncReturnType<typeof deleteShippingProfilesProfile>
>
export type GetShippingProfilesProfileResult = NonNullable<
  AsyncReturnType<typeof getShippingProfilesProfile>
>
export type PostShippingProfilesProfileResult = NonNullable<
  AsyncReturnType<typeof postShippingProfilesProfile>
>

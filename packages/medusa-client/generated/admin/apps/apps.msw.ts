/**
 * Generated by orval v6.7.1 🍺
 * Do not edit manually.
 * Medusa Admin API
 * OpenAPI spec version: 1.0.0
 */
import { rest } from "msw"
import { faker } from "@faker-js/faker"

export const getPostAppsMock = () => ({
  apps: faker.helpers.randomize([
    {
      id: faker.helpers.randomize([faker.random.word(), undefined]),
      display_name: faker.helpers.randomize([faker.random.word(), undefined]),
      application_name: faker.helpers.randomize([
        faker.random.word(),
        undefined,
      ]),
      install_url: faker.helpers.randomize([faker.random.word(), undefined]),
      uninstall_url: faker.helpers.randomize([
        faker.datatype.number(),
        undefined,
      ]),
      data: faker.helpers.randomize([{}, undefined]),
    },
    undefined,
  ]),
})

export const getGetAppsMock = () => ({
  collection: faker.helpers.randomize([
    {
      id: faker.helpers.randomize([faker.random.word(), undefined]),
      display_name: faker.helpers.randomize([faker.random.word(), undefined]),
      application_name: faker.helpers.randomize([
        faker.random.word(),
        undefined,
      ]),
      install_url: faker.helpers.randomize([faker.random.word(), undefined]),
      uninstall_url: faker.helpers.randomize([
        faker.datatype.number(),
        undefined,
      ]),
      data: faker.helpers.randomize([{}, undefined]),
    },
    undefined,
  ]),
})

export const getAppsMSW = () => [
  rest.post("*/admin/apps", (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getPostAppsMock())
    )
  }),
  rest.get("*/admin/apps", (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getGetAppsMock())
    )
  }),
]

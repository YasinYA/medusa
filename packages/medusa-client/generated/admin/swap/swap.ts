/**
 * Generated by orval v6.7.1 🍺
 * Do not edit manually.
 * Medusa Admin API
 * OpenAPI spec version: 1.0.0
 */
import type {
  PostOrdersSwapCancel200,
  GetSwapsSwap200,
  GetSwaps200,
} from ".././model"
import { getClient } from "../../../src/custom-instance"

/**
 * Cancels a Swap
 * @summary Cancels a Swap
 */
export const postOrdersSwapCancel = (id: string, swapId: string) => {
  return getClient<PostOrdersSwapCancel200>({
    url: `/admin/orders/${id}/swaps/${swapId}/cancel`,
    method: "post",
  })
}
/**
 * Retrieves a Swap.
 * @summary Retrieve a Swap
 */
export const getSwapsSwap = (id: string) => {
  return getClient<GetSwapsSwap200>({
    url: `/admin/swaps/${id}`,
    method: "get",
  })
}
/**
 * Retrieves a list of Swaps.
 * @summary List Swaps
 */
export const getSwaps = () => {
  return getClient<GetSwaps200>({ url: `/admin/swaps`, method: "get" })
}

// eslint-disable-next-line @typescript-eslint/no-explicit-any
type AsyncReturnType<T extends (...args: any) => Promise<any>> = T extends (
  ...args: any
) => Promise<infer R>
  ? R
  : any

export type PostOrdersSwapCancelResult = NonNullable<
  AsyncReturnType<typeof postOrdersSwapCancel>
>
export type GetSwapsSwapResult = NonNullable<
  AsyncReturnType<typeof getSwapsSwap>
>
export type GetSwapsResult = NonNullable<AsyncReturnType<typeof getSwaps>>

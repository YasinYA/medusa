/**
 * Generated by orval v6.7.1 🍺
 * Do not edit manually.
 * Medusa Admin API
 * OpenAPI spec version: 1.0.0
 */
import type {
  PostCustomerGroupsGroupCustomersBatch200,
  PostCustomerGroupsGroupCustomersBatchBody,
  DeleteCustomerGroupsGroupCustomerBatch200,
  DeleteCustomerGroupsGroupCustomerBatchBody,
  PostCustomerGroups200,
  PostCustomerGroupsBody,
  GetCustomerGroups200,
  GetCustomerGroupsParams,
  DeleteCustomerGroupsCustomerGroup200,
  GetCustomerGroupsGroup200,
  PostCustomerGroupsGroup200,
  PostCustomerGroupsGroupBody,
} from ".././model"
import { getClient } from "../../../src/custom-instance"

/**
 * Adds a list of customers, represented by id's, to a customer group.
 * @summary Add a list of customers to a customer group
 */
export const postCustomerGroupsGroupCustomersBatch = (
  id: string,
  postCustomerGroupsGroupCustomersBatchBody: PostCustomerGroupsGroupCustomersBatchBody
) => {
  return getClient<PostCustomerGroupsGroupCustomersBatch200>({
    url: `/admin/customer-groups/${id}/customers/batch`,
    method: "post",
    headers: { "Content-Type": "application/json" },
    data: postCustomerGroupsGroupCustomersBatchBody,
  })
}
/**
 * Removes a list of customers, represented by id's, from a customer group.
 * @summary Remove a list of customers from a customer group
 */
export const deleteCustomerGroupsGroupCustomerBatch = (
  id: string,
  deleteCustomerGroupsGroupCustomerBatchBody: DeleteCustomerGroupsGroupCustomerBatchBody
) => {
  return getClient<DeleteCustomerGroupsGroupCustomerBatch200>({
    url: `/admin/customer-groups/${id}/customers/batch`,
    method: "delete",
    headers: { "Content-Type": "application/json" },
    data: deleteCustomerGroupsGroupCustomerBatchBody,
  })
}
/**
 * Creates a CustomerGroup.
 * @summary Create a CustomerGroup
 */
export const postCustomerGroups = (
  postCustomerGroupsBody: PostCustomerGroupsBody
) => {
  return getClient<PostCustomerGroups200>({
    url: `/admin/customer-groups`,
    method: "post",
    headers: { "Content-Type": "application/json" },
    data: postCustomerGroupsBody,
  })
}
/**
 * Retrieve a list of customer groups.
 * @summary Retrieve a list of customer groups
 */
export const getCustomerGroups = (params?: GetCustomerGroupsParams) => {
  return getClient<GetCustomerGroups200>({
    url: `/admin/customer-groups`,
    method: "get",
    params,
  })
}
/**
 * Deletes a CustomerGroup.
 * @summary Delete a CustomerGroup
 */
export const deleteCustomerGroupsCustomerGroup = (id: string) => {
  return getClient<DeleteCustomerGroupsCustomerGroup200>({
    url: `/admin/customer-groups/${id}`,
    method: "delete",
  })
}
/**
 * Retrieves a Customer Group.
 * @summary Retrieve a CustomerGroup
 */
export const getCustomerGroupsGroup = (id: string) => {
  return getClient<GetCustomerGroupsGroup200>({
    url: `/admin/customer-groups/${id}`,
    method: "get",
  })
}
/**
 * Update a CustomerGroup.
 * @summary Update a CustomerGroup
 */
export const postCustomerGroupsGroup = (
  id: string,
  postCustomerGroupsGroupBody: PostCustomerGroupsGroupBody
) => {
  return getClient<PostCustomerGroupsGroup200>({
    url: `/admin/customer-groups/${id}`,
    method: "post",
    headers: { "Content-Type": "application/json" },
    data: postCustomerGroupsGroupBody,
  })
}

// eslint-disable-next-line @typescript-eslint/no-explicit-any
type AsyncReturnType<T extends (...args: any) => Promise<any>> = T extends (
  ...args: any
) => Promise<infer R>
  ? R
  : any

export type PostCustomerGroupsGroupCustomersBatchResult = NonNullable<
  AsyncReturnType<typeof postCustomerGroupsGroupCustomersBatch>
>
export type DeleteCustomerGroupsGroupCustomerBatchResult = NonNullable<
  AsyncReturnType<typeof deleteCustomerGroupsGroupCustomerBatch>
>
export type PostCustomerGroupsResult = NonNullable<
  AsyncReturnType<typeof postCustomerGroups>
>
export type GetCustomerGroupsResult = NonNullable<
  AsyncReturnType<typeof getCustomerGroups>
>
export type DeleteCustomerGroupsCustomerGroupResult = NonNullable<
  AsyncReturnType<typeof deleteCustomerGroupsCustomerGroup>
>
export type GetCustomerGroupsGroupResult = NonNullable<
  AsyncReturnType<typeof getCustomerGroupsGroup>
>
export type PostCustomerGroupsGroupResult = NonNullable<
  AsyncReturnType<typeof postCustomerGroupsGroup>
>

/**
 * Generated by orval v6.7.1 üç∫
 * Do not edit manually.
 * Medusa Admin API
 * OpenAPI spec version: 1.0.0
 */
import type { Customer } from "./customer"
import type { NotificationData } from "./notificationData"
import type { NotificationResend } from "./notificationResend"

/**
 * Notifications a communications sent via Notification Providers as a reaction to internal events such as `order.placed`. Notifications can be used to show a chronological timeline for communications sent to a Customer regarding an Order, and enables resends.
 */
export interface Notification {
  /** The id of the Notification. This value will be prefixed by `noti_`. */
  id?: string
  /** The name of the event that the notification was sent for. */
  event_name?: string
  /** The type of resource that the Notification refers to. */
  resource_type?: string
  /** The id of the resource that the Notification refers to. */
  resource_id?: string
  /** The id of the Customer that the Notification was sent to. */
  customer_id?: string
  /** The Customer that the Notification was sent to. */
  customer?: Customer
  /** The address that the Notification was sent to. This will usually be an email address, but represent other addresses such as a chat bot user id */
  to?: string
  /** The data that the Notification was sent with. This contains all the data necessary for the Notification Provider to initiate a resend. */
  data?: NotificationData
  /** The id of the Notification that was originally sent. */
  parent_id?: string
  /** The resends that have been completed after the original Notification. */
  resends?: NotificationResend[]
  /** The id of the Notification Provider that handles the Notification. */
  provider_id?: string
  /** The date with timezone at which the resource was created. */
  created_at?: string
  /** The date with timezone at which the resource was last updated. */
  updated_at?: string
}

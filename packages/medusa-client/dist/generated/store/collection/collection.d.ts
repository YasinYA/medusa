/**
 * Generated by orval v6.7.1 🍺
 * Do not edit manually.
 * Medusa Storefront API
 * OpenAPI spec version: 1.0.0
 */
import type { GetCollectionsCollection200, GetCollections200, GetCollectionsParams } from '.././model';
/**
* Retrieves a Product Collection.
* @summary Retrieve a Product Collection
*/
export declare const getCollectionsCollection: (id: string) => Promise<GetCollectionsCollection200>;
/**
* Retrieve a list of Product Collection.
* @summary List Product Collections
*/
export declare const getCollections: (params?: GetCollectionsParams | undefined) => Promise<GetCollections200>;
declare type AsyncReturnType<T extends (...args: any) => Promise<any>> = T extends (...args: any) => Promise<infer R> ? R : any;
export declare type GetCollectionsCollectionResult = NonNullable<AsyncReturnType<typeof getCollectionsCollection>>;
export declare type GetCollectionsResult = NonNullable<AsyncReturnType<typeof getCollections>>;
export {};

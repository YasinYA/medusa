/**
 * Generated by orval v6.7.1 🍺
 * Do not edit manually.
 * Medusa Admin API
 * OpenAPI spec version: 1.0.0
 */
import type { PostRegionsRegionCountries200, PostRegionsRegionCountriesBody, PostRegionsRegionFulfillmentProviders200, PostRegionsRegionFulfillmentProvidersBody, PostRegionsRegionPaymentProviders200, PostRegionsRegionPaymentProvidersBody, PostRegions200, PostRegionsBody, GetRegions200, GetRegionsParams, DeleteRegionsRegionMetadataKey200, DeleteRegionsRegion200, GetRegionsRegion200, PostRegionsRegion200, PostRegionsRegionBody, GetRegionsRegionFulfillmentOptions200, PostRegionsRegionCountriesCountry200, PostRegionsRegionFulfillmentProvidersProvider200, PostRegionsRegionPaymentProvidersProvider200, PostRegionsRegionMetadata200, PostRegionsRegionMetadataBody } from '.././model';
/**
* Adds a Country to the list of Countries in a Region
* @summary Add Country
*/
export declare const postRegionsRegionCountries: (id: string, postRegionsRegionCountriesBody: PostRegionsRegionCountriesBody) => Promise<PostRegionsRegionCountries200>;
/**
* Adds a Fulfillment Provider to a Region
* @summary Add Fulfillment Provider
*/
export declare const postRegionsRegionFulfillmentProviders: (id: string, postRegionsRegionFulfillmentProvidersBody: PostRegionsRegionFulfillmentProvidersBody) => Promise<PostRegionsRegionFulfillmentProviders200>;
/**
* Adds a Payment Provider to a Region
* @summary Add Payment Provider
*/
export declare const postRegionsRegionPaymentProviders: (id: string, postRegionsRegionPaymentProvidersBody: PostRegionsRegionPaymentProvidersBody) => Promise<PostRegionsRegionPaymentProviders200>;
/**
* Creates a Region
* @summary Create a Region
*/
export declare const postRegions: (postRegionsBody: PostRegionsBody) => Promise<PostRegions200>;
/**
* Retrieves a list of Regions.
* @summary List Regions
*/
export declare const getRegions: (params?: GetRegionsParams | undefined) => Promise<GetRegions200>;
/**
* Deletes a metadata key.
* @summary Delete Metadata
*/
export declare const deleteRegionsRegionMetadataKey: (id: string, key: string) => Promise<DeleteRegionsRegionMetadataKey200>;
/**
* Deletes a Region.
* @summary Delete a Region
*/
export declare const deleteRegionsRegion: (id: string) => Promise<DeleteRegionsRegion200>;
/**
* Retrieves a Region.
* @summary Retrieve a Region
*/
export declare const getRegionsRegion: (id: string) => Promise<GetRegionsRegion200>;
/**
* Updates a Region
* @summary Update a Region
*/
export declare const postRegionsRegion: (id: string, postRegionsRegionBody: PostRegionsRegionBody) => Promise<PostRegionsRegion200>;
/**
* Gathers all the fulfillment options available to in the Region.
* @summary List Fulfillment Options available in the Region
*/
export declare const getRegionsRegionFulfillmentOptions: (id: string) => Promise<GetRegionsRegionFulfillmentOptions200>;
/**
* Removes a Country from the list of Countries in a Region
* @summary Remove Country
*/
export declare const postRegionsRegionCountriesCountry: (id: string, countryCode: string) => Promise<PostRegionsRegionCountriesCountry200>;
/**
* Removes a Fulfillment Provider.
* @summary Remove Fulfillment Provider
*/
export declare const postRegionsRegionFulfillmentProvidersProvider: (id: string, providerId: string) => Promise<PostRegionsRegionFulfillmentProvidersProvider200>;
/**
* Removes a Payment Provider.
* @summary Remove Payment Provider
*/
export declare const postRegionsRegionPaymentProvidersProvider: (id: string, providerId: string) => Promise<PostRegionsRegionPaymentProvidersProvider200>;
/**
* Sets the metadata of a Region
* @summary Set the metadata of a Region
*/
export declare const postRegionsRegionMetadata: (id: string, postRegionsRegionMetadataBody: PostRegionsRegionMetadataBody) => Promise<PostRegionsRegionMetadata200>;
declare type AsyncReturnType<T extends (...args: any) => Promise<any>> = T extends (...args: any) => Promise<infer R> ? R : any;
export declare type PostRegionsRegionCountriesResult = NonNullable<AsyncReturnType<typeof postRegionsRegionCountries>>;
export declare type PostRegionsRegionFulfillmentProvidersResult = NonNullable<AsyncReturnType<typeof postRegionsRegionFulfillmentProviders>>;
export declare type PostRegionsRegionPaymentProvidersResult = NonNullable<AsyncReturnType<typeof postRegionsRegionPaymentProviders>>;
export declare type PostRegionsResult = NonNullable<AsyncReturnType<typeof postRegions>>;
export declare type GetRegionsResult = NonNullable<AsyncReturnType<typeof getRegions>>;
export declare type DeleteRegionsRegionMetadataKeyResult = NonNullable<AsyncReturnType<typeof deleteRegionsRegionMetadataKey>>;
export declare type DeleteRegionsRegionResult = NonNullable<AsyncReturnType<typeof deleteRegionsRegion>>;
export declare type GetRegionsRegionResult = NonNullable<AsyncReturnType<typeof getRegionsRegion>>;
export declare type PostRegionsRegionResult = NonNullable<AsyncReturnType<typeof postRegionsRegion>>;
export declare type GetRegionsRegionFulfillmentOptionsResult = NonNullable<AsyncReturnType<typeof getRegionsRegionFulfillmentOptions>>;
export declare type PostRegionsRegionCountriesCountryResult = NonNullable<AsyncReturnType<typeof postRegionsRegionCountriesCountry>>;
export declare type PostRegionsRegionFulfillmentProvidersProviderResult = NonNullable<AsyncReturnType<typeof postRegionsRegionFulfillmentProvidersProvider>>;
export declare type PostRegionsRegionPaymentProvidersProviderResult = NonNullable<AsyncReturnType<typeof postRegionsRegionPaymentProvidersProvider>>;
export declare type PostRegionsRegionMetadataResult = NonNullable<AsyncReturnType<typeof postRegionsRegionMetadata>>;
export {};

/**
 * Generated by orval v6.7.1 🍺
 * Do not edit manually.
 * Medusa Admin API
 * OpenAPI spec version: 1.0.0
 */
import type { PostOrdersSwapCancel200, GetSwapsSwap200, GetSwaps200 } from '.././model';
/**
* Cancels a Swap
* @summary Cancels a Swap
*/
export declare const postOrdersSwapCancel: (id: string, swapId: string) => Promise<PostOrdersSwapCancel200>;
/**
* Retrieves a Swap.
* @summary Retrieve a Swap
*/
export declare const getSwapsSwap: (id: string) => Promise<GetSwapsSwap200>;
/**
* Retrieves a list of Swaps.
* @summary List Swaps
*/
export declare const getSwaps: () => Promise<GetSwaps200>;
declare type AsyncReturnType<T extends (...args: any) => Promise<any>> = T extends (...args: any) => Promise<infer R> ? R : any;
export declare type PostOrdersSwapCancelResult = NonNullable<AsyncReturnType<typeof postOrdersSwapCancel>>;
export declare type GetSwapsSwapResult = NonNullable<AsyncReturnType<typeof getSwapsSwap>>;
export declare type GetSwapsResult = NonNullable<AsyncReturnType<typeof getSwaps>>;
export {};

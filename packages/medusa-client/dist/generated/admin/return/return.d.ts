/**
 * Generated by orval v6.7.1 🍺
 * Do not edit manually.
 * Medusa Admin API
 * OpenAPI spec version: 1.0.0
 */
import type { PostReturnsReturnCancel200, GetReturns200, PostReturnsReturnReceive200, PostReturnsReturnReceiveBody } from '.././model';
/**
* Registers a Return as canceled.
* @summary Cancel a Return
*/
export declare const postReturnsReturnCancel: (id: string) => Promise<PostReturnsReturnCancel200>;
/**
* Retrieves a list of Returns
* @summary List Returns
*/
export declare const getReturns: () => Promise<GetReturns200>;
/**
* Registers a Return as received. Updates statuses on Orders and Swaps accordingly.
* @summary Receive a Return
*/
export declare const postReturnsReturnReceive: (id: string, postReturnsReturnReceiveBody: PostReturnsReturnReceiveBody) => Promise<PostReturnsReturnReceive200>;
declare type AsyncReturnType<T extends (...args: any) => Promise<any>> = T extends (...args: any) => Promise<infer R> ? R : any;
export declare type PostReturnsReturnCancelResult = NonNullable<AsyncReturnType<typeof postReturnsReturnCancel>>;
export declare type GetReturnsResult = NonNullable<AsyncReturnType<typeof getReturns>>;
export declare type PostReturnsReturnReceiveResult = NonNullable<AsyncReturnType<typeof postReturnsReturnReceive>>;
export {};

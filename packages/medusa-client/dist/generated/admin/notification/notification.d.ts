/**
 * Generated by orval v6.7.1 🍺
 * Do not edit manually.
 * Medusa Admin API
 * OpenAPI spec version: 1.0.0
 */
import type { GetNotifications200, GetNotificationsParams, PostNotificationsNotificationResend200, PostNotificationsNotificationResendBody } from '.././model';
/**
* Retrieves a list of Notifications.
* @summary List Notifications
*/
export declare const getNotifications: (params?: GetNotificationsParams | undefined) => Promise<GetNotifications200>;
/**
* Resends a previously sent notifications, with the same data but optionally to a different address
* @summary Resend Notification
*/
export declare const postNotificationsNotificationResend: (id: string, postNotificationsNotificationResendBody: PostNotificationsNotificationResendBody) => Promise<PostNotificationsNotificationResend200>;
declare type AsyncReturnType<T extends (...args: any) => Promise<any>> = T extends (...args: any) => Promise<infer R> ? R : any;
export declare type GetNotificationsResult = NonNullable<AsyncReturnType<typeof getNotifications>>;
export declare type PostNotificationsNotificationResendResult = NonNullable<AsyncReturnType<typeof postNotificationsNotificationResend>>;
export {};

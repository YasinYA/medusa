/**
 * Generated by orval v6.7.1 🍺
 * Do not edit manually.
 * Medusa Admin API
 * OpenAPI spec version: 1.0.0
 */
import {
  rest
} from 'msw'
import {
  faker
} from '@faker-js/faker'

export const getPostCustomerGroupsMock = () => ({customer_group: faker.helpers.randomize([{}, undefined])})

export const getDeleteCustomerGroupsCustomerGroupMock = () => ({id: faker.helpers.randomize([faker.random.word(), undefined]), object: faker.helpers.randomize([faker.random.word(), undefined]), deleted: faker.helpers.randomize([faker.datatype.boolean(), undefined])})

export const getPostCustomerGroupsGroupMock = () => ({customer_group: faker.helpers.randomize([{}, undefined])})

export const getGetCustomerGroupsGroupMock = () => ({customer_group: faker.helpers.randomize([{}, undefined])})

export const getCustomerGroupMSW = () => [
rest.post('*/customer-groups', (_req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
ctx.json(getPostCustomerGroupsMock()),
        )
      }),rest.delete('*/customer-groups/:id', (_req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
ctx.json(getDeleteCustomerGroupsCustomerGroupMock()),
        )
      }),rest.post('*/customer-groups/:id', (_req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
ctx.json(getPostCustomerGroupsGroupMock()),
        )
      }),rest.get('*/customer-group/:id', (_req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
ctx.json(getGetCustomerGroupsGroupMock()),
        )
      }),]

/**
 * Generated by orval v6.7.1 🍺
 * Do not edit manually.
 * Medusa Admin API
 * OpenAPI spec version: 1.0.0
 */
import {
  rest
} from 'msw'
import {
  faker
} from '@faker-js/faker'

export const getPostDraftOrdersMock = () => ({draft_order: faker.helpers.randomize([{}, undefined])})

export const getGetDraftOrdersMock = () => ({draft_order: faker.helpers.randomize([{}, undefined])})

export const getPostDraftOrdersDraftOrderLineItemsMock = () => ({draft_order: faker.helpers.randomize([{}, undefined])})

export const getDeleteDraftOrdersDraftOrderMock = () => ({id: faker.helpers.randomize([faker.random.word(), undefined]), object: faker.helpers.randomize([faker.random.word(), undefined]), deleted: faker.helpers.randomize([faker.datatype.boolean(), undefined])})

export const getGetDraftOrdersDraftOrderMock = () => ({draft_order: faker.helpers.randomize([{}, undefined])})

export const getDeleteDraftOrdersDraftOrderLineItemsItemMock = () => ({draft_order: faker.helpers.randomize([{}, undefined])})

export const getPostDraftOrdersDraftOrderLineItemsItemMock = () => ({draft_order: faker.helpers.randomize([{}, undefined])})

export const getPostDraftOrdersDraftOrderRegisterPaymentMock = () => ({draft_order: faker.helpers.randomize([{}, undefined])})

export const getPostDraftOrdersDraftOrderMock = () => ({draft_order: faker.helpers.randomize([{}, undefined])})

export const getDraftOrderMSW = () => [
rest.post('*/draft-orders', (_req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
ctx.json(getPostDraftOrdersMock()),
        )
      }),rest.get('*/draft-orders', (_req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
ctx.json(getGetDraftOrdersMock()),
        )
      }),rest.post('*/draft-orders/:id/line-items', (_req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
ctx.json(getPostDraftOrdersDraftOrderLineItemsMock()),
        )
      }),rest.delete('*/draft-orders/:id', (_req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
ctx.json(getDeleteDraftOrdersDraftOrderMock()),
        )
      }),rest.get('*/draft-orders/:id', (_req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
ctx.json(getGetDraftOrdersDraftOrderMock()),
        )
      }),rest.delete('*/draft-orders/:id/line-items/:lineid', (_req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
ctx.json(getDeleteDraftOrdersDraftOrderLineItemsItemMock()),
        )
      }),rest.post('*/draft-orders/:id/line-items/:lineid', (_req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
ctx.json(getPostDraftOrdersDraftOrderLineItemsItemMock()),
        )
      }),rest.post('*/draft-orders/:id/register-payment', (_req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
ctx.json(getPostDraftOrdersDraftOrderRegisterPaymentMock()),
        )
      }),rest.post('*/admin/draft-orders/:id', (_req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
ctx.json(getPostDraftOrdersDraftOrderMock()),
        )
      }),]

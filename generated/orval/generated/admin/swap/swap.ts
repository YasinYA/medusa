/**
 * Generated by orval v6.7.1 🍺
 * Do not edit manually.
 * Medusa Admin API
 * OpenAPI spec version: 1.0.0
 */
import type {
  PostOrdersSwapCancel200,
  GetSwapsSwap200,
  GetSwaps200
} from '.././model'
import { customInstance } from '../../../src/custom-instance'


  /**
 * Cancels a Swap
 * @summary Cancels a Swap
 */
export const postOrdersSwapCancel = (
    id: string,
    swapId: string,
 ) => {
      return customInstance<PostOrdersSwapCancel200>(
      {url: `/orders/${id}/swaps/${swapId}/cancel`, method: 'post'
    },
      );
    }
  /**
 * Retrieves a Swap.
 * @summary Retrieve a Swap
 */
export const getSwapsSwap = (
    id: string,
 ) => {
      return customInstance<GetSwapsSwap200>(
      {url: `/swaps/${id}`, method: 'get'
    },
      );
    }
  /**
 * Retrieves a list of Swaps.
 * @summary List Swaps
 */
export const getSwaps = (
    
 ) => {
      return customInstance<GetSwaps200>(
      {url: `/swaps`, method: 'get'
    },
      );
    }
  
// eslint-disable-next-line @typescript-eslint/no-explicit-any
type AsyncReturnType<
T extends (...args: any) => Promise<any>
> = T extends (...args: any) => Promise<infer R> ? R : any;

export type PostOrdersSwapCancelResult = NonNullable<AsyncReturnType<typeof postOrdersSwapCancel>>
export type GetSwapsSwapResult = NonNullable<AsyncReturnType<typeof getSwapsSwap>>
export type GetSwapsResult = NonNullable<AsyncReturnType<typeof getSwaps>>
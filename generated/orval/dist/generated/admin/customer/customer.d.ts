/**
 * Generated by orval v6.7.1 🍺
 * Do not edit manually.
 * Medusa Admin API
 * OpenAPI spec version: 1.0.0
 */
import type { PostCustomers200, PostCustomersBody, GetCustomers200, GetCustomersCustomer200, PostCustomersCustomer200, PostCustomersCustomerBody, PostCustomersCustomerParams } from '.././model';
/**
* Creates a Customer.
* @summary Create a Customer
*/
export declare const postCustomers: (postCustomersBody: PostCustomersBody) => Promise<PostCustomers200>;
/**
* Retrieves a list of Customers.
* @summary List Customers
*/
export declare const getCustomers: () => Promise<GetCustomers200>;
/**
* Retrieves a Customer.
* @summary Retrieve a Customer
*/
export declare const getCustomersCustomer: (id: string) => Promise<GetCustomersCustomer200>;
/**
* Updates a Customer.
* @summary Update a Customer
*/
export declare const postCustomersCustomer: (id: string, postCustomersCustomerBody: PostCustomersCustomerBody, params?: PostCustomersCustomerParams | undefined) => Promise<PostCustomersCustomer200>;
declare type AsyncReturnType<T extends (...args: any) => Promise<any>> = T extends (...args: any) => Promise<infer R> ? R : any;
export declare type PostCustomersResult = NonNullable<AsyncReturnType<typeof postCustomers>>;
export declare type GetCustomersResult = NonNullable<AsyncReturnType<typeof getCustomers>>;
export declare type GetCustomersCustomerResult = NonNullable<AsyncReturnType<typeof getCustomersCustomer>>;
export declare type PostCustomersCustomerResult = NonNullable<AsyncReturnType<typeof postCustomersCustomer>>;
export {};
